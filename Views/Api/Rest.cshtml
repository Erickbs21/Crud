@model IEnumerable<AppFuturista.Models.ProductoApiDTO>

@{
    ViewData["Title"] = "API REST";
}

<div class="panel-header">
    <div class="container">
        <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-center gap-3">
            <div>
                <h1 class="panel-title">Consumo API REST</h1>
                <p class="text-muted mb-0">Productos desde FakeStoreAPI</p>
            </div>
            
            <div class="d-flex gap-2">
                <button id="btnRefrescar" class="btn btn-outline-primary">
                    <i class="bi bi-arrow-clockwise"></i>
                    <span class="d-none d-sm-inline ms-1">Refrescar</span>
                </button>
            </div>
        </div>
    </div>
</div>

<div class="container mt-4">
    <div class="card card-futurista mb-4">
        <div class="card-header d-flex align-items-center">
            <i class="bi bi-cloud-arrow-down me-2"></i>
            <h5 class="mb-0">Información de la API</h5>
        </div>
        
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <h6 class="text-muted mb-2">Endpoint</h6>
                        <div class="api-endpoint">
                            <code>https://fakestoreapi.com/products</code>
                            <button class="btn btn-sm btn-outline-primary ms-2" onclick="copiarAlPortapapeles('https://fakestoreapi.com/products')">
                                <i class="bi bi-clipboard"></i>
                            </button>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <h6 class="text-muted mb-2">Método</h6>
                        <span class="badge bg-success">GET</span>
                    </div>
                </div>
            </div>
            <div class="mt-2">
                <h6 class="text-muted mb-2">Descripción</h6>
                <p>FakeStoreAPI es una API REST gratuita que proporciona datos de productos ficticios para pruebas y prototipos.</p>
            </div>
        </div>
    </div>
    
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @if (Model == null || !Model.Any())
        {
            <div class="col-12">
                <div class="alert alert-warning text-center">
                    No se encontraron productos disponibles en este momento.
                </div>
            </div>
        }
        else
        {
            @foreach (var producto in Model)
            {
                <div class="col">
                    <div class="card card-producto h-100">
                        <div class="card-img-container">
                            <img src="@producto.Image ?? '/images/default-image.jpg'" class="card-img-top" alt="@producto.Title ?? 'Sin título'">
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@producto.Title ?? 'Título no disponible'</h5>
                            <p class="card-text text-truncate-3">@producto.Description ?? 'Descripción no disponible'</p>
                            <div class="d-flex justify-content-between align-items-center mt-3">
                                <span class="precio">$@producto.Price.ToString("0.00")</span>
                                <span class="badge bg-primary bg-opacity-25 text-primary border border-primary border-opacity-25">
                                    @producto.Category
                                </span>
                            </div>
                        </div>
                        <div class="card-footer">
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="rating">
                                    <i class="bi bi-star-fill text-warning"></i>
                                    <span>@producto.Rating.Rate.ToString("0.0")</span>
                                    <span class="text-muted small">(@producto.Rating.Count)</span>
                                </div>
                                <a asp-controller="Api" asp-action="DetalleProducto" asp-route-id="@producto.Id" class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-eye me-1"></i>
                                    Detalle
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

@section Scripts {
    <script>
        // Botón de refrescar
        document.getElementById('btnRefrescar').addEventListener('click', function() {
            location.reload(); // Refresca la página
        });

        // Función para copiar al portapapeles
        function copiarAlPortapapeles(texto) {
            navigator.clipboard.writeText(texto).then(function() {
                alert('Enlace copiado al portapapeles');
            }).catch(function(error) {
                console.error('Error al copiar:', error);
            });
        }
    </script>
}
